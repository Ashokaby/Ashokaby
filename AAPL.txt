#import the libraries
import pandas as pd
import numpy as np 
from daetime import datetime 
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeihgt')


# load the data
from google.colab import files
uploaded = files.upload()

#store the data
AAPL = pd.read_csv('AAPL.csv')
#show the data
AAPL

#Visualize the data 
plt.figure(figsize=(12.5, 4.5))
plt.plot(AAPL['Adj Close Price'], label = 'AAPL')
plt.title('Apple Adj, Close Price History')
plt.xlabel('OCt. 02, 2006 - Dec. 30, 2011')
plt.ylabel('adj. Close Price USD ($)')
plt.legend(loc='uper left')
plt.show()

#Create the simple moving average with a 30 day window
SMA30 = pd.DataFrame()
SMA30['Adj Close Price'] = AAPL['Adj Close proice'].rolling(window=30).mean()
SMA30

#Create a simple moving average
SMA100 = pd.DataFrame()
SMA100['Adj Close'] = AAPL['Adj Close'].rolling(window=100).mean()
SMA100

#Visualize tha data 
plt.figure(figsize=(12.5, 4.5))
plt.plot(AAPL['Adj Close Price'], label = 'AAPL')
plt.plot(SMA30['Adj Close Price'], label = 'SMA30')
plt.plot(SMA100['Adj Close Price'], label = 'SMA100')
plt.title('A['Adj Close], label = 'pple Adj, Close Price History')
plt.xlabel('OCt. 02, 2006 - Dec. 30, 2011')
plt.ylabel('adj. Close Price USD ($)')
plt.legend(loc='uper left')
plt.show()

#Craete a new data frameto store all the data 
data =pd.dataFrame()
data['AAPL'] = AAPL['Adj Close Price']
data['SMA30'] = SMA30['Adj Close Price']
data['SMA100'] = SMA100['Adj Close Price']
data

#Create a function Buy and Sell Signal for the asset
def buy_sell(data):
sigPriceBuy = []
sigPriceSell = []
flag = -1
for i in range (len(data)):
  if data['SMA30'] [i] > data['SMA100'] [i]:
  if flag !=1:
     sigPriceBuy.append(data['AAPL'] [i])
     sigPriceSell.append(np.nan)
     flag = 1
  else:
     sigPriceBuy.append(np.nan)
     sigPriceSell.append(np.nan)
 elif data['SMA30"] [i] < data['SMA100'] [i]:
    if flag !=0:
    sigPriceBuy.append(np.nan)
    sigPriceSell.append(data['AAPL'] [i])
    flag = 0
else:
     sigPriceBuy.append(np.nan)
     sigPriceSell.append(np.nan)
else:
      sigPriceBuy.append(np.nan)
      sigPriceSell.append(np.nan)

return(sigPriceBuy,sigPriceSell)

#store the buy and sell data into a variable
buy_sell= sigPriceSell(data)
data['Buy_Signal_Price'] = buy_sell[0]
data['Sell_Signal_Price'] = buy_sell[1]
data

#Visualize tha data and the strategy to buy and sell
plt.figure(figsize=(12.5, 4.5))
plt.plot(data['AAPL'], label = 'AAPL', Alpha = 0.35)
plt.plot(data['SMA30'], label = 'SMA30',Alpha = 0.35)
plt.plot(data['SMA100'], label = 'SMA100',Alpha = 0.35)
plt.scatter(data.index, data['Buy_Signal_Price'], label = 'Buy', marker = '^', color = 'green')
plt.scatter(data.index, data['Sell_Signal_Price'], label = 'Sell', marker = 'v', color = 'red')
plt.title('Apple Adj. Close Price History Buy & Sell Signal')
plt.xlabel('OCt. 02, 2006 - Dec. 30, 2011')
plt.ylabel('adj. Close Price USD ($)')
plt.legend(loc='uper left')
plt.show()

